---
# Tekton Pipeline used expects the built-in SNAPSHOT param
# and a COMPONENT_NAME to extract the right image.
apiVersion: appstudio.redhat.com/v1beta2
kind: IntegrationTestScenario
metadata:
  # Choose a stable, DNS-safe name for the scenario
  name: testing-farm-integration
  # Namespace (tenant workspace) where your app and tests live
  namespace: my-ns-tenant
  labels:
    # If "true", the ITS is optional and won't block promotions.
    # Keep "false" to make failures block delivery.
    test.appstudio.openshift.io/optional: "false"
spec:
  # Exact Konflux Application name this scenario belongs to
  application: my-app
  # Reference the Tekton Pipeline via the Git resolver. Konflux fetches it
  # from your repository at the specified path/revision.
  resolverRef:
    resolver: git
    params:
      - name: url
        value: https://github.com/yomismo/repo.git
      - name: revision
        value: main
      - name: pathInRepo
        # Path to the pipeline YAML in your repo
        value: tekton/pipelines/testing-farm-pipeline.yaml

  # Parameters forwarded to the Pipeline (and then to the Task).
  # Adjust these to your needs or override per-scenario.
  params:
    # Exact component name used by Task to extract image ref from SNAPSHOT
    - name: COMPONENT_NAME
      value: my-app-component
    # Testing Farm target environment
    - name: TF_COMPOSE
      value: RHEL-9
    - name: TF_ARCH
      value: x86_64
    # Repository containing your FMF/tmt metadata and tests
    - name: TF_GIT_URL
      value: https://github.com/yomismo/repo.git
    - name: TF_GIT_REF
      value: main
    # Path to tmt metadata tree root (relative to git repo root)
    - name: TF_PATH
      value: tekton
    # Path to the tmt plan in your repo (defined below)
    - name: TF_PLAN
      value: /plans/run-root-image
    # End-to-end timeout for the Testing Farm request, in minutes
    - name: TF_TIMEOUT_MIN
      value: "120"

    # Environment variables passed to the test environment (available in test scripts).
    # Add variables like CONTAINER_CMD="..." CONTAINER_ARGS="..." if needed.
    - name: TF_TEST_ENV
      value: ""

    # Environment variables passed to tmt process for configuring report plugins.
    # Used for reportportal, polarion, etc. Usually empty for most use cases.
    - name: TF_TMT_ENV
      value: ""

    # Registry credentials for private images (SECURITY NOTE!)
    # WARNING: Do NOT put credentials directly in this file in production!
    # Instead, store them in a Kubernetes Secret and reference them in the task:
    #
    # 1. Create secret:
    #    kubectl -n <namespace> create secret generic container-registry-credentials \
    #      --from-literal=username='your-username' \
    #      --from-literal=password='your-token'
    #
    # 2. Modify tekton/tasks/testing-farm-request.yaml to add env section:
    #    env:
    #      - name: REGISTRY_USER
    #        valueFrom:
    #          secretKeyRef:
    #            name: container-registry-credentials
    #            key: username
    #      - name: REGISTRY_PASSWORD
    #        valueFrom:
    #          secretKeyRef:
    #            name: container-registry-credentials
    #            key: password
    #
    # For Quay.io, use Robot Accounts: namespace+robotname as username
    - name: REGISTRY_USER
      value: ""
    - name: REGISTRY_PASSWORD
      value: ""
